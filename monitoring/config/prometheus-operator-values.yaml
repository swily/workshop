prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: true
    podMonitorSelectorNilUsesHelmValues: true
    serviceMonitorSelector:
      matchLabels:
        release: prometheus-operator
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    additionalScrapeConfigs:
      - job_name: 'kubernetes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
        metric_relabel_configs:
          - source_labels: [container]
            regex: ^$
            action: drop

grafana:
  additionalDataSources:
    - name: webstore-metrics
      type: prometheus
      url: http://otel-demo-prometheus-server.otel-demo:9090
      access: proxy
      isDefault: false

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'otel-demo'
          orgId: 1
          folder: 'OpenTelemetry Demo'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/otel-demo

  dashboards:
    default:
      otel-demo:
        # This will mount the dashboards from the demo into Grafana
        configMapRef: otel-demo-dashboards
        enabled: true

