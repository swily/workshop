# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

# extra settings to be merged into OpenTelemetry Collector configuration
# do not delete this file

## Example configuration for sending data to your own OTLP HTTP backend
## Note: the spanmetrics exporter must be included in the exporters array
## if overriding the traces pipeline.
##
#  exporters:
#    otlphttp/example:
#      endpoint: <your-endpoint-url>
#
#  service:
#    pipelines:
#      traces:
#        exporters: [spanmetrics, otlphttp/example]

opentelemetry-collector:
  config:
    exporters:
      debug: {}
      prometheus:
        endpoint: "0.0.0.0:8889"
      opensearch:
        http:
          endpoint: http://otel-demo-opensearch:9200
          tls:
            insecure: true
        logs_index: otel

    processors:
      batch: {}
      memory_limiter:
        check_interval: 1s
        limit_mib: 400
        spike_limit_mib: 100
      k8sattributes:
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.deployment.name
            - k8s.statefulset.name
            - k8s.daemonset.name
            - k8s.cronjob.name
            - k8s.job.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.node.name
      resource:
        attributes:
          - action: insert
            from_attribute: k8s.pod.uid
            key: service.instance.id

    connectors:
      spanmetrics: {}

    service:
      telemetry:
        metrics:
          address: ${env:MY_POD_IP}:8888
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [debug, spanmetrics]
        metrics:
          receivers: [otlp, spanmetrics]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [prometheus, debug]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [opensearch, debug]

components:
  frontendProxy:
    service:
      type: LoadBalancer

prometheus:
  server:
    resources:
      limits:
        memory: 1Gi
      requests:
        memory: 512Mi
---
